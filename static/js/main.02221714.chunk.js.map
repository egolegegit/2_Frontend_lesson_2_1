{"version":3,"sources":["reportWebVitals.js","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/index.js","app/components/qualitie.jsx","app/components/bookmark.jsx","app/components/user.jsx","app/components/pagination.jsx","app/components/groupList.jsx","app/components/searchStatus.jsx","app/utils/utils.js","app/components/users.jsx","app/utils/paginate.js","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","professions","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","profession","completedMeetings","rate","API","fetchAll","Promise","resolve","window","setTimeout","Qualitie","qualitie","className","Bookmark","status","rest","role","xmlns","width","height","fill","viewBox","d","User","user","onDelete","bookmark","onToggleBookMark","map","el","idx","onClick","title","Pagination","onPageChange","userCount","pageSize","currentPage","pageCount","Math","ceil","pages","_","range","page","i","GroupList","items","valueProperty","contentProperty","onitemSelect","selectedItem","sortItems","Object","keys","sort","a","b","nameA","toLowerCase","nameB","item","defaultProps","SearchStatus","count","classesTitle","texTitle","number","titles","renderPhrase","Users","useState","setProfessions","selectedProf","setSelectedProf","setCurrentPage","useEffect","api","data","handleProfessionsSelect","theadTrasnlate","favorites","getThead","j","array","slice","handlePageChange","pageIdx","filterUsers","filter","length","newCurrentPage","usersCrop","startIdx","take","value","paginate","clearFilter","scope","App","setUsers","style","userId","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02221714.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","export const professionsObject = {\n  doctor: { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  waiter: { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  physics: { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  engineer: { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  actor: { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  cook: { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' },\n}\n\nexport const professions = [\n  { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' },\n]\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(professions)\n    }, 2000)\n  })\n\nexport default {\n  fetchAll,\n}\n","import { professionsObject as professions } from './professions.api'\n\nconst qualities = {\n  tedious: {\n    _id: '67rdca3eeb7f6fgeed471198',\n    name: 'Нудила',\n    color: 'primary',\n  },\n  strange: {\n    _id: '67rdca3eeb7f6fgeed471100',\n    name: 'Странный',\n    color: 'secondary',\n  },\n  buller: {\n    _id: '67rdca3eeb7f6fgeed4711012',\n    name: 'Троль',\n    color: 'success',\n  },\n  alcoholic: {\n    _id: '67rdca3eeb7f6fgeed471101',\n    name: 'Алкоголик',\n    color: 'danger',\n  },\n  handsome: {\n    _id: '67rdca3eeb7f6fgeed471102',\n    name: 'Красавчик',\n    color: 'info',\n  },\n  uncertain: {\n    _id: '67rdca3eeb7f6fgeed471102',\n    name: 'Неуверенный',\n    color: 'dark',\n  },\n}\n\nconst users = [\n  {\n    _id: '67rdca3eeb7f6fgeed471815',\n    name: 'Джон Дориан',\n    profession: professions.doctor,\n    qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n    completedMeetings: 36,\n    rate: 2.5,\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471816',\n    name: 'Кокс',\n    profession: professions.doctor,\n    qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n    completedMeetings: 15,\n    rate: 2.5,\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471817',\n    name: 'Боб Келсо',\n    profession: professions.doctor,\n    qualities: [qualities.buller],\n    completedMeetings: 247,\n    rate: 3.5,\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471818',\n    name: 'Рэйчел Грин',\n    profession: professions.waiter,\n    qualities: [qualities.uncertain],\n    completedMeetings: 148,\n    rate: 3.5,\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471819',\n    name: 'Шелдон Купер',\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 37,\n    rate: 4.6,\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471820',\n    name: 'Леонард Хофстедтер',\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 147,\n    rate: 3.5,\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471821',\n    name: 'Говард Воловиц',\n    profession: professions.engineer,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 72,\n    rate: 3.5,\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471822',\n    name: 'Никола Тесла',\n    profession: professions.engineer,\n    qualities: [qualities.handsome],\n    completedMeetings: 72,\n    rate: 5,\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471823',\n    name: 'Моника Геллер',\n    profession: professions.cook,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 17,\n    rate: 4.5,\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471824',\n    name: 'Рататуй',\n    profession: professions.cook,\n    qualities: [qualities.handsome, qualities.buller],\n    completedMeetings: 17,\n    rate: 4.5,\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed47181f',\n    name: 'Джоуи Триббиани',\n    profession: professions.actor,\n    qualities: [qualities.uncertain, qualities.strange],\n    completedMeetings: 434,\n    rate: 3.5,\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed47181r',\n    name: 'Брэд Питт',\n    profession: professions.actor,\n    qualities: [qualities.handsome],\n    completedMeetings: 434,\n    rate: 5,\n  },\n]\n\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(users)\n    }, 2000)\n  })\n\nexport default {\n  fetchAll,\n}\n","import users from './fake.api/user.api'\nimport professions from './fake.api/professions.api'\nconst API = {\n  users,\n  professions,\n}\nexport default API\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Qualitie = ({ qualitie }) => {\r\n  return (\r\n    <span className={`badge bg-${qualitie.color} m-1`}>{qualitie.name}</span>\r\n  )\r\n}\r\n\r\nQualitie.propTypes = { qualitie: PropTypes.object.isRequired }\r\n\r\nexport default Qualitie\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Bookmark = ({ status, ...rest }) => {\r\n  const renderBookmark = () => {\r\n    if (status) {\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"22\"\r\n          height=\"22\"\r\n          fill=\"#20c997\"\r\n          className=\"bi bi-bookmark-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2z\" />\r\n        </svg>\r\n      )\r\n    }\r\n    return (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"22\"\r\n        height=\"22\"\r\n        fill=\"currentColor\"\r\n        className=\"bi bi-bookmark-fill\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z\" />\r\n      </svg>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div {...rest} role=\"button\">\r\n      {renderBookmark()}\r\n    </div>\r\n  )\r\n}\r\n\r\nBookmark.propTypes = {\r\n  status: PropTypes.bool,\r\n}\r\n\r\nexport default Bookmark\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Qualitie from './qualitie'\r\nimport Bookmark from './bookmark'\r\n\r\nconst User = ({ user, onDelete, bookmark, onToggleBookMark, ...rest }) => {\r\n  return (\r\n    <tr key={user._id}>\r\n      <td className=\"col-2\">{user.name}</td>\r\n      <td className=\"col-3\">\r\n        {user.qualities.map((el, idx) => (\r\n          <Qualitie key={idx} qualitie={el} />\r\n        ))}\r\n      </td>\r\n      <td className=\"col-2\">{user.profession.name}</td>\r\n      <td className=\"col-2\">{user.completedMeetings}</td>\r\n      <td className=\"col-1\">{user.rate}</td>\r\n      <td className=\"col-1\">\r\n        {\r\n          <Bookmark\r\n            status={bookmark}\r\n            onClick={() => onToggleBookMark(user._id)}\r\n          />\r\n        }\r\n      </td>\r\n      <td className=\"col-1\">\r\n        <button\r\n          title=\"Удалить\"\r\n          onClick={() => onDelete(user._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          x\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nUser.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  bookmark: PropTypes.bool,\r\n  onToggleBookMark: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport _ from 'lodash'\r\n\r\nconst Pagination = ({ onPageChange, userCount, pageSize, currentPage }) => {\r\n  const pageCount = Math.ceil(userCount / pageSize)\r\n  const pages = _.range(1, pageCount + 1)\r\n\r\n  if (pageCount === 1) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul className=\"pagination justify-content-center\">\r\n        {pages.map((page, i) => (\r\n          <li\r\n            key={i}\r\n            className={'page-item ' + (page === currentPage ? 'active' : '')}\r\n            onClick={() => onPageChange(page)}\r\n            role=\"button\"\r\n          >\r\n            <a className=\"page-link\">{page}</a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nPagination.propTypes = {\r\n  onPageChange: PropTypes.func.isRequired,\r\n  userCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\n\nconst GroupList = ({\n  items,\n  valueProperty,\n  contentProperty,\n  onitemSelect,\n  selectedItem,\n}) => {\n  const sortItems = Object.keys(items).sort((a, b) => {\n    const nameA = items[a].name.toLowerCase()\n    const nameB = items[b].name.toLowerCase()\n    if (nameA < nameB) {\n      return -1\n    }\n\n    if (nameA > nameB) {\n      return 1\n    }\n    return 0\n  })\n\n  return (\n    <ul className=\"list-group\">\n      {sortItems.map((item) => (\n        <li\n          key={items[item][valueProperty]}\n          className={\n            'list-group-item list-group-item-action' +\n            (items[item] === selectedItem ? ' active' : '')\n          }\n          onClick={() => onitemSelect(items[item])}\n          role=\"button\"\n        >\n          {items[item][contentProperty]}\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nGroupList.defaultProps = {\n  valueProperty: '_id',\n  contentProperty: 'name',\n}\n\nGroupList.propTypes = {\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  onitemSelect: PropTypes.func,\n  selectedItem: PropTypes.object,\n}\n\nexport default GroupList\n","import React from 'react'\r\nimport { renderPhrase } from '../utils/utils'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SearchStatus = ({ count }) => {\r\n  const titles = ['человек', 'человека', 'человек']\r\n\r\n  let classesTitle = 'badge bg-'\r\n  classesTitle += count !== 0 ? 'primary' : 'danger'\r\n  const texTitle =\r\n    count !== 0\r\n      ? `${count} ${renderPhrase(count, titles)} тусанется сегодня с тобой `\r\n      : 'Никто с тобой не тусанет'\r\n  return (\r\n    <h4>\r\n      <span className={`badge bg-${classesTitle}`}>{texTitle}</span>\r\n    </h4>\r\n  )\r\n}\r\n\r\nSearchStatus.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default SearchStatus\r\n","export function swap(el, i, j) {\r\n  return el.map((el, idx, array) => {\r\n    if (idx === i) return array[j]\r\n    if (idx === j) return array[i]\r\n    return el\r\n  })\r\n}\r\n\r\nexport function renderPhrase(number, titles) {\r\n  const cases = [2, 0, 1, 1, 1, 2]\r\n  return titles[\r\n    number % 100 > 4 && number % 100 < 20\r\n      ? 2\r\n      : cases[number % 10 < 5 ? number % 10 : 5]\r\n  ]\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { swap } from '../utils/utils'\r\nimport User from './user'\r\nimport Pagination from './pagination'\r\nimport GroupList from './groupList'\r\nimport SearchStatus from './searchStatus'\r\nimport paginate from '../utils/paginate'\r\nimport api from '../api'\r\n\r\nconst Users = ({ users, ...rest }) => {\r\n  const pageSize = 2\r\n  const [professions, setProfessions] = useState()\r\n  const [selectedProf, setSelectedProf] = useState()\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    api.professions.fetchAll().then((data) => setProfessions(data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1)\r\n  }, [selectedProf])\r\n\r\n  const handleProfessionsSelect = (item) => {\r\n    setSelectedProf(item)\r\n  }\r\n\r\n  const theadTrasnlate = {\r\n    name: 'Имя',\r\n    qualities: 'Качества',\r\n    profession: 'Профессия',\r\n    completedMeetings: 'Кол-во встреч',\r\n    rate: 'Оценка',\r\n    favorites: 'Избранное',\r\n  }\r\n\r\n  const getThead = () => [\r\n    ...swap(Object.keys(users[0]), 2, 3).slice(1),\r\n    'favorites',\r\n  ]\r\n\r\n  const handlePageChange = (pageIdx) => {\r\n    setCurrentPage(pageIdx)\r\n  }\r\n\r\n  const filterUsers = selectedProf\r\n    ? users.filter((user) => user.profession === selectedProf)\r\n    : users\r\n\r\n  const userCount = filterUsers.length\r\n  const pageCount = Math.ceil(userCount / pageSize)\r\n  const newCurrentPage = currentPage < pageCount ? currentPage : pageCount\r\n\r\n  const usersCrop = paginate(filterUsers, newCurrentPage, pageSize)\r\n\r\n  const clearFilter = () => {\r\n    setSelectedProf()\r\n  }\r\n\r\n  const renderTables = () => {\r\n    return (\r\n      <div className=\"d-flex flex-column p-4\">\r\n        <SearchStatus count={userCount} />\r\n        <div className=\"d-flex flex-row\">\r\n          <div className=\"d-flex flex-column me-4\">\r\n            <span className=\"list-group-item fw-bold border-0\">Фильтр</span>\r\n            {professions && (\r\n              <>\r\n                <GroupList\r\n                  items={professions}\r\n                  onitemSelect={handleProfessionsSelect}\r\n                  selectedItem={selectedProf}\r\n                />\r\n                <button\r\n                  className=\"btn btn-secondary mt-2\"\r\n                  onClick={clearFilter}\r\n                >\r\n                  Очистить\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"d-flex flex-column flex-fill\">\r\n            {userCount > 0 && (\r\n              <table className=\"table table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    {getThead().map((el, idx) => {\r\n                      return (\r\n                        <th scope={'col'} key={idx}>\r\n                          {theadTrasnlate[el]}\r\n                        </th>\r\n                      )\r\n                    })}\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {usersCrop.map((user, idx) => {\r\n                    return <User key={idx} user={user} bookmark={user.bookmark} {...rest} />\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n\r\n            <Pagination\r\n              userCount={userCount}\r\n              pageSize={pageSize}\r\n              currentPage={newCurrentPage}\r\n              onPageChange={handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return <>{renderTables()}</>\r\n}\r\n\r\nUsers.propTypes = { users: PropTypes.array.isRequired }\r\n\r\nexport default Users\r\n","import _ from 'lodash'\r\n\r\nexport default function paginate(array, page, pageSize) {\r\n  const startIdx = (page - 1) * pageSize\r\n\r\n  return _(array).slice(startIdx).take(pageSize).value()\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport api from './api/index'\r\nimport Users from './components/users'\r\n\r\nfunction App() {\r\n  const [users, setUsers] = useState()\r\n\r\n  useEffect(async () => {\r\n    const data = await api.users.fetchAll()\r\n    setUsers(() => data)\r\n    // api.users.fetchAll().then((data) => setUsers(() => data))\r\n  }, [])\r\n\r\n  const handleDelete = (userId) => {\r\n    setUsers(users.filter((item, id) => item._id !== userId))\r\n  }\r\n\r\n  const handleToggleBookMark = (id) => {\r\n    setUsers(\r\n      users.map((user) => {\r\n        if (user._id === id) {\r\n          return { ...user, bookmark: !user.bookmark }\r\n        }\r\n        return user\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!users && (\r\n        <div className=\"d-flex align-items-center justify-content-center vw-100 vh-100\">\r\n          <span className=\"fs-2 fw-bold pe-4\">Loading...</span>\r\n          <div\r\n            className=\"spinner-border\"\r\n            style={{ width: '2rem', height: '2rem' }}\r\n            role=\"status\"\r\n          ></div>\r\n        </div>\r\n      )}\r\n\r\n      {users && (\r\n        <Users\r\n          users={users}\r\n          onDelete={handleDelete}\r\n          onToggleBookMark={handleToggleBookMark}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport './index.css'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './app/App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\nreportWebVitals()\r\n"],"sourceRoot":""}