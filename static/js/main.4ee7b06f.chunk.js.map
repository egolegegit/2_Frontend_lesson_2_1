{"version":3,"sources":["app/components/contexts/theme-context.js","app/components/providers/ThemeProvider.js","app/assets/svg/SunIcon.jsx","app/assets/svg/MoonIcon.jsx","app/components/themetoggle/ThemeToggle.jsx","app/components/navBar.jsx","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/index.js","app/components/loader.jsx","app/components/qualitie.jsx","app/components/qualitiesList.jsx","app/components/userPage.jsx","app/components/pagination.jsx","app/components/groupList.jsx","app/components/searchStatus.jsx","app/utils/utils.js","app/components/bookmark.jsx","app/assets/svg/ArrowDropDown.jsx","app/assets/svg/ArrowUpDown.jsx","app/assets/svg/sortIcon.jsx","app/components/tableHeader.jsx","app/components/tableBody.jsx","app/components/table.jsx","app/components/usersTable.jsx","app/components/textField.jsx","app/components/usersList.jsx","app/utils/searchBySubString.js","app/utils/paginate.js","app/layouts/users.jsx","app/layouts/login.jsx","app/utils/validator.js","app/layouts/main.jsx","app/App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","getInitialTheme","window","localStorage","storedPrefs","getItem","matchMedia","matches","ThemeProvider","initialTheme","children","useState","theme","setTheme","rawSetTheme","rawTheme","isDark","root","document","documentElement","styles","getComputedStyle","body","black","getPropertyValue","white","docEl","classList","remove","add","setItem","style","setProperty","useEffect","Provider","value","SunIcon","height","width","viewBox","xmlns","fill","d","MoonIcon","ThemeToggle","themeContext","useContext","className","htmlFor","id","name","type","defaultChecked","onClick","NavBar","exact","to","activeClassName","professionsObject","doctor","_id","waiter","physics","engineer","actor","cook","programmer","professions","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","communicative","users","profession","completedMeetings","rate","bookmark","API","fetchAll","Promise","resolve","setTimeout","getById","find","user","Loader","role","Qualitie","qualitie","QualitiesList","map","el","idx","UserPage","params","useParams","history","useHistory","userId","setUser","a","api","data","console","error","fetchUser","push","Pagination","onPageChange","userCount","pageSize","currentPage","pageCount","Math","ceil","pages","_","range","page","i","GroupList","items","valueProperty","contentProperty","onitemSelect","selectedItem","Array","isArray","sortItems","Object","keys","sort","b","nameA","toLowerCase","nameB","item","defaultProps","SearchStatus","count","classesTitle","texTitle","number","titles","renderPhrase","BookMark","status","rest","ArrowDropDown","ArrowUpDown","sortIcon","selectedSort","order","title","TableHeader","onSort","columns","getThead","column","path","undefined","scope","key","TableBody","renderContent","component","get","classname","Table","UserTable","onDelete","onToggleBookMark","delete","TextField","label","placeholder","onChange","input","useRef","showPassword","setShowPassword","current","focus","ref","prevState","UsersList","setProfessions","selectedProf","setSelectedProf","setCurrentPage","iter","sortBy","setSortBy","searchData","setSearchData","setUsers","fetchUsers","then","searchString","handleDelete","filter","handleToggleBookMark","handleProfessionsSelect","handlePageChange","pageIdx","handleSort","handleChange","target","clearFilter","filterUsers","JSON","stringify","indexOf","length","newCurrentPage","usersCrop","array","startIdx","slice","take","paginate","orderBy","Users","Login","email","password","setData","errors","setErrors","validatorConfig","isRequired","message","isEmail","isCapitalSymbol","isContainDigit","isMin","validate","config","validateMethod","statusValidate","trim","test","fieldName","validator","isValid","onSubmit","e","preventDefault","log","disabled","Main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4ee7b06f.chunk.js","sourcesContent":["import React from 'react'\n\nconst ThemeContext = React.createContext()\n\nexport { ThemeContext }\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { ThemeContext } from '../contexts/theme-context'\n\nconst getInitialTheme = () => {\n  if (typeof window !== 'undefined' && localStorage) {\n    const storedPrefs = localStorage.getItem('color-theme')\n    if (typeof storedPrefs === 'string') {\n      return storedPrefs\n    }\n\n    const userMedia = window.matchMedia('(prefers-color-scheme: dark)')\n    if (userMedia.matches) {\n      return 'dark'\n    }\n  }\n\n  return 'light'\n}\n\nexport const ThemeProvider = ({ initialTheme, children }) => {\n  const [theme, setTheme] = useState(getInitialTheme)\n\n  const rawSetTheme = (rawTheme) => {\n    const isDark = rawTheme === 'dark'\n    const root = window.document.documentElement\n\n    const styles = getComputedStyle(document.body)\n    const black = styles.getPropertyValue('--black')\n    const white = styles.getPropertyValue('--white')\n    const docEl = document.documentElement\n\n    root.classList.remove(isDark ? 'light' : 'dark')\n    root.classList.add(rawTheme)\n\n    localStorage.setItem('color-theme', rawTheme)\n\n    if (isDark) {\n      docEl.style.setProperty('--background', black)\n      docEl.style.setProperty('--foreground', white)\n    } else {\n      docEl.style.setProperty('--background', white)\n      docEl.style.setProperty('--foreground', black)\n    }\n  }\n\n  if (initialTheme) {\n    rawSetTheme(initialTheme)\n  }\n\n  React.useEffect(() => {\n    rawSetTheme(theme)\n  }, [theme])\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  initialTheme: PropTypes.string,\n  children: PropTypes.object,\n}\n","import React from 'react'\r\nconst SunIcon = () => {\r\n  const title = 'Enable Light Mode'\r\n  // const title = props.title || 'ic wb sunny 24px'\r\n  return (\r\n    <svg\r\n      height=\"20\"\r\n      width=\"20\"\r\n      viewBox=\"0 0 20 20\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <title>{title}</title>\r\n      <g fill=\"#F7F7F7\">\r\n        <path d=\"M5.61 4.02l-1.49-1.49-1.17 1.17 1.48 1.49 1.18-1.17z m-2.29 4.7h-2.49v1.66h2.49v-1.66z m7.47-8.26h-1.66v2.44h1.66v-2.44z m6.18 3.24l-1.17-1.17-1.48 1.49 1.17 1.17 1.48-1.49z m-2.66 11.37l1.48 1.5 1.18-1.17-1.5-1.49-1.16 1.16z m2.29-6.36v1.66h2.49v-1.66h-2.49z m-6.64-4.15c-2.75 0-4.98 2.23-4.98 4.98s2.23 4.98 4.98 4.98 4.98-2.23 4.98-4.98-2.23-4.98-4.98-4.98z m-0.83 14.07h1.66v-2.45h-1.66v2.45z m-6.18-3.24l1.17 1.17 1.48-1.5-1.17-1.17-1.48 1.5z\" />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default SunIcon\r\n","import React from 'react'\r\nconst MoonIcon = () => {\r\n  const title = 'Enable Dark Mode'\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      viewBox=\"0 0 20 20\"\r\n    >\r\n      <title>{title}</title>\r\n      <g fill=\"#F7F7F7\">\r\n        <path d=\"M17.21 14.67a8.28 8.28 0 0 0 2.16-3.77c-2.8 0.74-5.91 0.03-8.1-2.17s-2.91-5.31-2.17-8.1a8.37 8.37 0 0 0-3.77 2.16 8.4 8.4 0 0 0 11.88 11.88z\"></path>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default MoonIcon\r\n","import React, { useContext } from 'react'\r\nimport { ThemeContext } from '../../components/contexts/theme-context'\r\nimport SunIcon from '../../assets/svg/SunIcon'\r\nimport MoonIcon from '../../assets/svg/MoonIcon'\r\nimport './themetoggle.scss'\r\n\r\nconst ThemeToggle = () => {\r\n  const themeContext = useContext(ThemeContext)\r\n  const { theme, setTheme } = themeContext\r\n\r\n  const toggleState = () => {\r\n    setTheme(theme === 'dark' ? 'light' : 'dark')\r\n  }\r\n\r\n  return (\r\n    <label className=\"toggle-wrapper me-3\" htmlFor=\"toggle\">\r\n      <div className={`toggle ${theme === 'dark' ? 'enabled' : 'disabled'}`}>\r\n        <span className=\"hidden\">\r\n          {theme === 'dark' ? 'Enable Light Mode' : 'Enable Dark Mode'}\r\n        </span>\r\n        <div className=\"icons\">\r\n          <SunIcon />\r\n          <MoonIcon />\r\n        </div>\r\n        <input\r\n          id=\"toggle\"\r\n          name=\"toggle\"\r\n          type=\"checkbox\"\r\n          defaultChecked={theme === 'dark'}\r\n          onClick={toggleState}\r\n        />\r\n      </div>\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default ThemeToggle\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport ThemeToggle from './themetoggle/ThemeToggle'\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div className=\"layout-header\">\r\n      <ThemeToggle />\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        className=\"z-0 px-3 py-2 no-underline dark:text-white hover-link\"\r\n        activeClassName=\"dark:focus:text-green-200 dark:bg-gray-600 bg-gray-300\"\r\n      >\r\n        Main\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        className=\"z-0 px-3 py-2 no-underline dark:text-white hover-link\"\r\n        activeClassName=\"dark:focus:text-green-200 dark:bg-gray-600 bg-gray-300\"\r\n      >\r\n        Login\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/users\"\r\n        className=\"z-0 px-3 py-2 no-underline dark:text-white hover-link\"\r\n        activeClassName=\"dark:focus:text-green-200 dark:bg-gray-600 bg-gray-300\"\r\n      >\r\n        Users\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","export const professionsObject = {\r\n  doctor: { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\r\n  waiter: { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\r\n  physics: { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\r\n  engineer: { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\r\n  actor: { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\r\n  cook: { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' },\r\n  programmer: { _id: '67rdca3eeb7f6fgeed472839', name: 'Программист' },\r\n}\r\n\r\nexport const professions = [\r\n  { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\r\n  { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\r\n  { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\r\n  { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\r\n  { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\r\n  { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' },\r\n  { _id: '67rdca3eeb7f6fgeed472839', name: 'Программист' },\r\n]\r\nconst fetchAll = () =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(function () {\r\n      resolve(professions)\r\n    }, 1000)\r\n  })\r\n\r\nexport default {\r\n  fetchAll,\r\n}\r\n","import { professionsObject as professions } from './professions.api'\r\n\r\nconst qualities = {\r\n  tedious: {\r\n    _id: '67rdca3eeb7f6fgeed471198',\r\n    name: 'Нудила',\r\n    color: 'primary',\r\n  },\r\n  strange: {\r\n    _id: '67rdca3eeb7f6fgeed471100',\r\n    name: 'Странный',\r\n    color: 'secondary',\r\n  },\r\n  buller: {\r\n    _id: '67rdca3eeb7f6fgeed4711012',\r\n    name: 'Троль',\r\n    color: 'success',\r\n  },\r\n  alcoholic: {\r\n    _id: '67rdca3eeb7f6fgeed471101',\r\n    name: 'Алкоголик',\r\n    color: 'danger',\r\n  },\r\n  handsome: {\r\n    _id: '67rdca3eeb7f6fgeed471102',\r\n    name: 'Красавчик',\r\n    color: 'info',\r\n  },\r\n  uncertain: {\r\n    _id: '67rdca3eeb7f6fgeed471102',\r\n    name: 'Неуверенный',\r\n    color: 'dark',\r\n  },\r\n  communicative: {\r\n    _id: '67rdca3eeb7f6fgeed472202',\r\n    name: 'Общительный',\r\n    color: 'success',\r\n  },\r\n}\r\n\r\nconst users = [\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471815',\r\n    name: 'Джон Дориан',\r\n    profession: professions.doctor,\r\n    qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\r\n    completedMeetings: 36,\r\n    rate: 2.5,\r\n    bookmark: false,\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471816',\r\n    name: 'Кокс',\r\n    profession: professions.doctor,\r\n    qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\r\n    completedMeetings: 15,\r\n    rate: 2.5,\r\n    bookmark: false,\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471817',\r\n    name: 'Боб Келсо',\r\n    profession: professions.doctor,\r\n    qualities: [qualities.buller],\r\n    completedMeetings: 247,\r\n    rate: 3.5,\r\n    bookmark: false,\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471818',\r\n    name: 'Рэйчел Грин',\r\n    profession: professions.waiter,\r\n    qualities: [qualities.uncertain],\r\n    completedMeetings: 148,\r\n    rate: 3.5,\r\n    bookmark: false,\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471819',\r\n    name: 'Шелдон Купер',\r\n    profession: professions.physics,\r\n    qualities: [qualities.strange, qualities.tedious],\r\n    completedMeetings: 37,\r\n    rate: 4.6,\r\n    bookmark: false,\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471820',\r\n    name: 'Леонард Хофстедтер',\r\n    profession: professions.physics,\r\n    qualities: [qualities.strange, qualities.uncertain],\r\n    completedMeetings: 147,\r\n    rate: 3.5,\r\n    bookmark: false,\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471821',\r\n    name: 'Говард Воловиц',\r\n    profession: professions.engineer,\r\n    qualities: [qualities.strange, qualities.tedious],\r\n    completedMeetings: 72,\r\n    rate: 3.5,\r\n    bookmark: false,\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471822',\r\n    name: 'Никола Тесла',\r\n    profession: professions.engineer,\r\n    qualities: [qualities.handsome],\r\n    completedMeetings: 72,\r\n    rate: 5,\r\n    bookmark: false,\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471823',\r\n    name: 'Моника Геллер',\r\n    profession: professions.cook,\r\n    qualities: [qualities.strange, qualities.uncertain],\r\n    completedMeetings: 17,\r\n    rate: 4.5,\r\n    bookmark: false,\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471824',\r\n    name: 'Рататуй',\r\n    profession: professions.cook,\r\n    qualities: [qualities.handsome, qualities.buller],\r\n    completedMeetings: 17,\r\n    rate: 4.5,\r\n    bookmark: false,\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed47181f',\r\n    name: 'Джоуи Триббиани',\r\n    profession: professions.actor,\r\n    qualities: [qualities.uncertain, qualities.strange],\r\n    completedMeetings: 434,\r\n    rate: 3.5,\r\n    bookmark: false,\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed47181r',\r\n    name: 'Брэд Питт',\r\n    profession: professions.actor,\r\n    qualities: [qualities.handsome],\r\n    completedMeetings: 434,\r\n    rate: 5,\r\n    bookmark: false,\r\n  },\r\n  {\r\n    _id: '67rdca3eeb7f6fgeed471895',\r\n    name: 'Илон Кван',\r\n    profession: professions.programmer,\r\n    qualities: [qualities.strange, qualities.communicative],\r\n    completedMeetings: 36,\r\n    rate: 2.5,\r\n    bookmark: false,\r\n  },\r\n]\r\n\r\nconst fetchAll = () =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(function () {\r\n      resolve(users)\r\n    }, 1800)\r\n  })\r\n\r\nconst getById = (id) =>\r\n  new Promise((resolve) => {\r\n    window.setTimeout(function () {\r\n      resolve(users.find((user) => user._id === id))\r\n    }, 900)\r\n  })\r\n\r\nexport default {\r\n  fetchAll,\r\n  getById,\r\n}\r\n","import users from './fake.api/user.api'\r\nimport professions from './fake.api/professions.api'\r\nconst API = {\r\n  users,\r\n  professions,\r\n}\r\nexport default API\r\n","import React from 'react'\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-center vw-100 vh-100\">\r\n      <span className=\"fs-2 fw-bold pe-4 dark:text-white\">Loading...</span>\r\n      <div\r\n        className=\"spinner-border dark:text-white\"\r\n        style={{ width: '2rem', height: '2rem' }}\r\n        role=\"status\"\r\n      ></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Qualitie = ({ qualitie }) => {\r\n  return (\r\n    <span className={`badge bg-${qualitie.color} m-1`}>{qualitie.name}</span>\r\n  )\r\n}\r\n\r\nQualitie.propTypes = { qualitie: PropTypes.object.isRequired }\r\n\r\nexport default Qualitie\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Qualitie from './qualitie'\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n  return (\r\n    <>\r\n      {qualities.map((el, idx) => (\r\n        <Qualitie key={idx} qualitie={el} />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\nQualitiesList.propTypes = {\r\n  qualities: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default QualitiesList\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport api from '../api'\r\nimport Loader from './loader'\r\nimport QualitiesList from './qualitiesList'\r\n\r\nconst UserPage = () => {\r\n  const params = useParams()\r\n  const history = useHistory()\r\n  const { userId } = params\r\n  const [user, setUser] = useState()\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const data = await api.users.getById(userId)\r\n        setUser(() => data)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n\r\n    fetchUser()\r\n  }, [userId])\r\n\r\n  if (user) {\r\n    return (\r\n      <div className=\"flex flex-col w-full p-4 user-conteiner\">\r\n        <div className=\"flex mb-3\">\r\n          <div className=\"rounded dark:text-white\">\r\n            <h2 className=\"mb-4 card-title dark:text-green-300\">{user.name}</h2>\r\n            <h5 className=\"mb-2 card-subtitle dark:text-green-300\">\r\n              <span className=\"dark:text-green-300\">Качества: </span>\r\n              <QualitiesList qualities={user.qualities} />\r\n            </h5>\r\n            <h5>\r\n              <span className=\"dark:text-green-300\">Профессия: </span>\r\n              {`${user.profession.name}`}\r\n            </h5>\r\n            <h5>\r\n              <span className=\"dark:text-green-300\">Кол-во встреч: </span>\r\n              {`${user.completedMeetings}`}\r\n            </h5>\r\n            <h5>\r\n              <span className=\"dark:text-green-300\">Оценка: </span>\r\n              {`${user.rate}`}\r\n            </h5>\r\n            {/* <Link className=\"mt-2 btn btn-secondary w-30\" to=\"/users\">\r\n              Все пользователи\r\n            </Link> */}\r\n            <button\r\n              className=\"mt-2 btn btn-secondary w-30\"\r\n              onClick={() => history.push('/users')}\r\n            >\r\n              Все пользователи\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  return <Loader />\r\n}\r\n\r\nexport default UserPage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport _ from 'lodash'\r\n\r\nconst Pagination = ({ onPageChange, userCount, pageSize, currentPage }) => {\r\n  const pageCount = Math.ceil(userCount / pageSize)\r\n  const pages = _.range(1, pageCount + 1)\r\n\r\n  if (pageCount === 1) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation example\" className=\"pt-4\">\r\n      <ul className=\"pagination justify-content-center\">\r\n        {pages.map((page, i) => (\r\n          <li\r\n            key={i}\r\n            className={\r\n              'px-3 py-2 rounded dark:hover:bg-gray-600 hover-link' +\r\n              (page === currentPage\r\n                ? 'dark:focus:text-green-200 dark:bg-gray-600 bg-gray-300'\r\n                : '')\r\n            }\r\n            onClick={() => onPageChange(page)}\r\n            role=\"button\"\r\n          >\r\n            <a className=\"no-underline dark:text-white\">{page}</a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nPagination.propTypes = {\r\n  onPageChange: PropTypes.func.isRequired,\r\n  userCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\nimport { PropTypes } from 'prop-types'\r\n\r\n// TODO add css sceleton for loading time\r\nconst GroupList = ({\r\n  items,\r\n  valueProperty,\r\n  contentProperty,\r\n  onitemSelect,\r\n  selectedItem,\r\n}) => {\r\n  if (Array.isArray) {\r\n    const sortItems = Object.keys(items).sort((a, b) => {\r\n      const nameA = items[a].name.toLowerCase()\r\n      const nameB = items[b].name.toLowerCase()\r\n      if (nameA < nameB) {\r\n        return -1\r\n      }\r\n\r\n      if (nameA > nameB) {\r\n        return 1\r\n      }\r\n      return 0\r\n    })\r\n\r\n    return (\r\n      <ul className=\"list-group\">\r\n        {sortItems.map((item) => (\r\n          <li\r\n            key={items[item][valueProperty]}\r\n            className={\r\n              'hover-link px-2 py-2 dark:text-white' +\r\n              (items[item] === selectedItem ? ' active' : '')\r\n            }\r\n            onClick={() => onitemSelect(items[item])}\r\n            role=\"button\"\r\n          >\r\n            {items[item][contentProperty]}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  }\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          className={\r\n            'list-group-item' +\r\n            (item === selectedItem ? ' active' : '') +\r\n            ' hover-link'\r\n          }\r\n          onClick={() => onitemSelect(item)}\r\n          role=\"button\"\r\n        >\r\n          {item[contentProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nGroupList.defaultProps = {\r\n  valueProperty: '_id',\r\n  contentProperty: 'name',\r\n}\r\n\r\nGroupList.propTypes = {\r\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  valueProperty: PropTypes.string.isRequired,\r\n  contentProperty: PropTypes.string.isRequired,\r\n  onitemSelect: PropTypes.func,\r\n  selectedItem: PropTypes.object,\r\n}\r\n\r\nexport default GroupList\r\n","import React from 'react'\r\nimport { renderPhrase } from '../utils/utils'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SearchStatus = ({ count }) => {\r\n  const titles = ['человек', 'человека', 'человек']\r\n\r\n  let classesTitle =\r\n    'rounded border-transparent text-white py-1 px-2 flex align-center whitespace-nowrap'\r\n  classesTitle += count !== 0 ? ' bg-blue-600' : ' bg-red-600'\r\n  const texTitle =\r\n    count !== 0\r\n      ? `${count} ${renderPhrase(count, titles)} тусанется сегодня с тобой `\r\n      : 'Никто с тобой не тусанет'\r\n  return (\r\n    <h5>\r\n      <span className={`${classesTitle}`}>{texTitle}</span>\r\n    </h5>\r\n  )\r\n}\r\n\r\nSearchStatus.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default SearchStatus\r\n","export function swap(el, i, j) {\r\n  return el.map((el, idx, array) => {\r\n    if (idx === i) return array[j]\r\n    if (idx === j) return array[i]\r\n    return el\r\n  })\r\n}\r\n\r\nexport function renderPhrase(number, titles) {\r\n  const cases = [2, 0, 1, 1, 1, 2]\r\n  return titles[\r\n    number % 100 > 4 && number % 100 < 20\r\n      ? 2\r\n      : cases[number % 10 < 5 ? number % 10 : 5]\r\n  ]\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst BookMark = ({ status, ...rest }) => {\r\n  const renderBookmark = () => {\r\n    if (status) {\r\n      return (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"22\"\r\n          height=\"22\"\r\n          fill=\"#20c997\"\r\n          className=\"bi bi-bookmark-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2z\" />\r\n        </svg>\r\n      )\r\n    }\r\n    return (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"22\"\r\n        height=\"22\"\r\n        fill=\"currentColor\"\r\n        className=\"bi bi-bookmark-fill\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z\" />\r\n      </svg>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div {...rest} role=\"button\">\r\n      {renderBookmark()}\r\n    </div>\r\n  )\r\n}\r\n\r\nBookMark.propTypes = {\r\n  status: PropTypes.bool,\r\n}\r\n\r\nexport default BookMark\r\n","import React from 'react'\r\n\r\nfunction ArrowDropDown() {\r\n  const title = 'Sort asc'\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-caret-up-fill\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <title>{title}</title>\r\n      <path d=\"m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default ArrowDropDown\r\n","import React from 'react'\r\n\r\nfunction ArrowUpDown() {\r\n  const title = 'Sort desc'\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-caret-down-fill\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <title>{title}</title>\r\n      <path d=\"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default ArrowUpDown\r\n","import React from 'react'\r\nimport ArrowDropDown18px from './ArrowDropDown'\r\nimport ArrowUpDown from './ArrowUpDown'\r\n\r\nconst sortIcon = ({ selectedSort }) => {\r\n  return (\r\n    <>\r\n      {selectedSort.order === 'asc' && <ArrowDropDown18px title={''} />}\r\n      {selectedSort.order === 'desc' && <ArrowUpDown />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default sortIcon\r\n","import React from 'react'\r\nimport SortIcon from '../assets/svg/sortIcon'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns, getThead }) => {\r\n  const handleSort = (item) => {\r\n    if (selectedSort.path === item) {\r\n      onSort({\r\n        ...selectedSort,\r\n        order: selectedSort.order === 'asc' ? 'desc' : 'asc',\r\n      })\r\n    } else {\r\n      onSort({ path: item, order: 'asc' })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <thead>\r\n      <tr className=\"dark:text-green-300 dark:border-green-300\">\r\n        {Object.keys(columns).map((column) => (\r\n          <th\r\n            onClick={\r\n              columns[column].path\r\n                ? () => handleSort(columns[column].path)\r\n                : undefined\r\n            }\r\n            scope={'col'}\r\n            {...{ role: columns[column].path && 'button' }}\r\n            key={column}\r\n          >\r\n            <span className=\"flex items-center\">\r\n              {columns[column].name}\r\n              {columns[column].path &&\r\n                columns[column].path === selectedSort.path && (\r\n                  <SortIcon selectedSort={selectedSort} />\r\n                )}\r\n            </span>\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\n\r\nTableHeader.propTypes = {\r\n  onSort: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n  columns: PropTypes.object.isRequired,\r\n  getThead: PropTypes.array,\r\n}\r\n\r\nexport default TableHeader\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n  const renderContent = (item, column) => {\r\n    if (columns[column].component) {\r\n      const component = columns[column].component\r\n      if (typeof component === 'function') {\r\n        return component(item)\r\n      }\r\n      return component\r\n    }\r\n    return _.get(item, columns[column].path)\r\n  }\r\n\r\n  return (\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr\r\n          key={item._id}\r\n          className=\"dark:text-white dark:border-green-300 dark:hover:bg-gray-600 dark:hover:text-white hover-link\"\r\n        >\r\n          {Object.keys(columns).map((column) => (\r\n            <td className={columns[column].classname} key={column}>\r\n              {renderContent(item, column)}\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  )\r\n}\r\n\r\nTableBody.propTypes = {\r\n  columns: PropTypes.object.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default TableBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TableHeader from './tableHeader'\r\nimport TableBody from './tableBody'\r\n\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n  return (\r\n    <table className=\"tableTW\">\r\n      {children || (\r\n        <>\r\n          <TableHeader {...{ onSort, selectedSort, columns }} />\r\n          <TableBody {...{ columns, data }} />\r\n        </>\r\n      )}\r\n    </table>\r\n  )\r\n}\r\n\r\nTable.propTypes = {\r\n  onSort: PropTypes.func,\r\n  selectedSort: PropTypes.object,\r\n  columns: PropTypes.object,\r\n  data: PropTypes.array,\r\n  children: PropTypes.array,\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport BookMark from './bookmark'\r\nimport QualitiesList from './qualitiesList'\r\nimport Table from './table'\r\n\r\nconst UserTable = ({\r\n  users,\r\n  onSort,\r\n  selectedSort,\r\n  onDelete,\r\n  onToggleBookMark,\r\n  ...rest\r\n}) => {\r\n  // TODO основа!!! к такой обьект должна возвращать функция getThead\r\n  const columns = {\r\n    name: {\r\n      path: 'name',\r\n      name: 'Имя',\r\n      component: (user) => (\r\n        <Link\r\n          to={`/users/${user._id}`}\r\n          className=\"no-underline dark:hover:underline dark:text-green-300 dark:hover:text-green-300\"\r\n        >\r\n          {user.name}\r\n        </Link>\r\n      ),\r\n      classname: 'col-2',\r\n    },\r\n    qualities: {\r\n      name: 'Качества',\r\n      component: (users) => <QualitiesList qualities={users.qualities} />,\r\n      classname: 'col-2',\r\n    },\r\n    profession: {\r\n      path: 'profession.name',\r\n      name: 'Профессия',\r\n      classname: 'col-2',\r\n    },\r\n    completedMeetings: {\r\n      path: 'completedMeetings',\r\n      name: 'Кол-во встреч',\r\n      classname: 'col-2',\r\n    },\r\n    rate: { path: 'rate', name: 'Оценка', classname: 'col-2' },\r\n    bookmark: {\r\n      path: 'bookmark',\r\n      name: 'Избранное',\r\n      component: (user) => (\r\n        <BookMark\r\n          status={user.bookmark}\r\n          onClick={() => onToggleBookMark(user._id)}\r\n        />\r\n      ),\r\n      classname: 'col-2',\r\n    },\r\n    delete: {\r\n      component: (user) => (\r\n        <button\r\n          title=\"Удалить\"\r\n          onClick={() => onDelete(user._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          x\r\n        </button>\r\n      ),\r\n      classname: 'col-1',\r\n    },\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      onSort={onSort}\r\n      selectedSort={selectedSort}\r\n      columns={columns}\r\n      data={users}\r\n    />\r\n  )\r\n}\r\n\r\nUserTable.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  onToggleBookMark: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  selectedSort: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default UserTable\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TextField = ({\r\n  label,\r\n  type,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  const input = useRef()\r\n  const [showPassword, setShowPassword] = useState(false)\r\n\r\n  const toggleShowPassword = () => {\r\n    setShowPassword((prevState) => !prevState)\r\n  }\r\n\r\n  const getInputClasses = () => {\r\n    return (\r\n      'w-full h-8 px-2 py-3 mt-1 border-gray-300 dark:border-green-400 rounded border-1 bg-transparent dark:text-white dark:focus:border-green-400 outline-none ' +\r\n      (error\r\n        ? 'border-red-400 focus:border-red-500 is-invalid'\r\n        : 'border-gray-400')\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    input.current.focus()\r\n  })\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full\">\r\n      <label htmlFor={name} className=\"w-full mt-3 text-start\">\r\n        {label}\r\n      </label>\r\n\r\n      <div className=\"input-group\">\r\n        <input\r\n          ref={input}\r\n          type={showPassword ? 'text' : type}\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          placeholder={`${placeholder || name}`}\r\n          onChange={onChange}\r\n          className={getInputClasses() + ''}\r\n        />\r\n\r\n        {type === 'password' && !error && (\r\n          <button\r\n            className=\"show-password\"\r\n            type=\"button\"\r\n            title=\"show password\"\r\n            onClick={toggleShowPassword}\r\n          ></button>\r\n        )}\r\n      </div>\r\n      <span className=\"h-4 pt-1 text-red-400 text-start dark:text-red-300\">\r\n        {error}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nTextField.defaultProps = { type: 'text' }\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  error: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TextField\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport api from '../api'\r\nimport paginate from '../utils/paginate'\r\nimport Pagination from './pagination'\r\nimport GroupList from './groupList'\r\nimport SearchStatus from './searchStatus'\r\nimport UserTable from './usersTable'\r\nimport Loader from './loader'\r\nimport TextField from './textField'\r\nimport searchBySubString from '../utils/searchBySubString'\r\n\r\nconst UsersList = () => {\r\n  const pageSize = 8\r\n  const [professions, setProfessions] = useState()\r\n  const [selectedProf, setSelectedProf] = useState()\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortBy, setSortBy] = useState({ iter: 'name', order: 'asc' })\r\n  const [searchData, setSearchData] = useState('')\r\n\r\n  const [users, setUsers] = useState()\r\n\r\n  useEffect(() => {\r\n    // api.users.fetchAll().then((data) => setUsers(() => data))\r\n    // use async/await variant\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const data = await api.users.fetchAll()\r\n        setUsers(() => data)\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n\r\n    fetchUsers()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    api.professions.fetchAll().then((data) => setProfessions(data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1)\r\n  }, [selectedProf])\r\n\r\n  const handleDelete = (userId) => {\r\n    setUsers(users.filter((item, id) => item._id !== userId))\r\n  }\r\n\r\n  const handleToggleBookMark = (id) => {\r\n    setUsers(\r\n      users.map((user) => {\r\n        if (user._id === id) {\r\n          return { ...user, bookmark: !user.bookmark }\r\n        }\r\n        return user\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleProfessionsSelect = (item) => {\r\n    setSelectedProf(item)\r\n    setSearchData('')\r\n  }\r\n\r\n  const handlePageChange = (pageIdx) => {\r\n    setCurrentPage(pageIdx)\r\n  }\r\n\r\n  const handleSort = (item) => {\r\n    setSortBy(item)\r\n  }\r\n\r\n  const handleChange = ({ target }) => {\r\n    setSelectedProf()\r\n    setSearchData((prevState) => target.value)\r\n  }\r\n\r\n  const clearFilter = () => {\r\n    setSelectedProf()\r\n    setSearchData('')\r\n  }\r\n\r\n  if (users) {\r\n    let filterUsers = selectedProf\r\n      ? users.filter(\r\n          (user) =>\r\n            JSON.stringify(user.profession) === JSON.stringify(selectedProf)\r\n          // user.profession._id === selectedProf._id\r\n        )\r\n      : users\r\n\r\n    filterUsers = searchBySubString(filterUsers, searchData)\r\n\r\n    const userCount = filterUsers.length\r\n    const pageCount = Math.ceil(userCount / pageSize)\r\n    const newCurrentPage = currentPage < pageCount ? currentPage : pageCount\r\n\r\n    const sortedUsers = _.orderBy(filterUsers, [sortBy.path], [sortBy.order])\r\n\r\n    const usersCrop = paginate(sortedUsers, newCurrentPage, pageSize)\r\n\r\n    const renderTables = () => {\r\n      return (\r\n        <div className=\"my-4 d-flex flex-column users-page-container\">\r\n          <SearchStatus count={userCount} />\r\n          <div className=\"flex-row d-flex\">\r\n            <div className=\"mt-2 d-flex flex-column me-4\">\r\n              <span className=\"px-2 py-2 border-0 fw-bold dark:text-green-200\">\r\n                Отбор\r\n              </span>\r\n              {professions && (\r\n                <>\r\n                  <GroupList\r\n                    items={professions}\r\n                    onitemSelect={handleProfessionsSelect}\r\n                    selectedItem={selectedProf}\r\n                  />\r\n                  <button\r\n                    className=\"mt-2 btn btn-secondary dark:bg-gray-600\"\r\n                    onClick={clearFilter}\r\n                  >\r\n                    Очистить\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n            {userCount > 0 && (\r\n              <div className=\"d-flex flex-column flex-fill\">\r\n                <TextField\r\n                  label=\"\"\r\n                  name=\"search\"\r\n                  value={searchData}\r\n                  placeholder={'search ...'}\r\n                  onChange={handleChange}\r\n                />\r\n                <UserTable\r\n                  users={usersCrop}\r\n                  onSort={handleSort}\r\n                  selectedSort={sortBy}\r\n                  onDelete={handleDelete}\r\n                  onToggleBookMark={handleToggleBookMark}\r\n                />\r\n                <Pagination\r\n                  userCount={userCount}\r\n                  pageSize={pageSize}\r\n                  currentPage={newCurrentPage}\r\n                  onPageChange={handlePageChange}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return renderTables()\r\n  }\r\n  return <Loader />\r\n}\r\n\r\nUsersList.propTypes = { users: PropTypes.array }\r\n\r\nexport default UsersList\r\n","import _ from 'lodash'\r\n\r\nexport default function searchBySubString(data, searchString) {\r\n  return _.filter(data, function (item) {\r\n    return item.name.toLowerCase().indexOf(searchString.toLowerCase()) !== -1\r\n  })\r\n}\r\n","import _ from 'lodash'\n\nexport default function paginate(array, page, pageSize) {\n  const startIdx = (page - 1) * pageSize\n\n  return _(array).slice(startIdx).take(pageSize).value()\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport UserPage from '../components/userPage'\nimport UsersList from '../components/usersList'\n\nconst Users = () => {\n  const params = useParams()\n  const { userId } = params\n\n  return <>{userId ? <UserPage /> : <UsersList />}</>\n}\n\nexport default Users\n","import React, { useState, useEffect } from 'react'\r\nimport TextField from '../components/textField'\r\nimport { validator } from '../utils/validator'\r\n\r\nconst Login = () => {\r\n  const [data, setData] = useState({ email: '', password: '' })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const handleChange = ({ target }) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }))\r\n  }\r\n\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: { message: '* Please enter a valid email address' },\r\n      isEmail: { message: 'Email address entered incorrectly' },\r\n    },\r\n    password: {\r\n      isRequired: { message: '* Please enter a valid password' },\r\n      isCapitalSymbol: { message: 'Password must contain 1 capital letter' },\r\n      isContainDigit: { message: 'password must contain at least 1 number' },\r\n      isMin: {\r\n        message: 'password must contain min 8 simbol',\r\n        value: 8,\r\n      },\r\n    },\r\n  }\r\n\r\n  useEffect(() => {\r\n    validate()\r\n  }, [data])\r\n\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig)\r\n\r\n    setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n\r\n  const isValid = Object.keys(errors).length === 0\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const isValid = validate()\r\n\r\n    if (!isValid) return\r\n    console.log(errors, data)\r\n  }\r\n\r\n  return (\r\n    <div className=\"pt-40 layout-content\">\r\n      <div className=\"flex flex-col items-center w-full rounded shadow p-14 wrapper-form sm:w-2/3 md:w-2/5 lg:w-2/6 dark:border-green-400 border-1\">\r\n        <h2>Login</h2>\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          className=\"flex flex-col items-center w-full text-center\"\r\n        >\r\n          <TextField\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            value={data.email}\r\n            onChange={handleChange}\r\n            error={errors.email}\r\n          />\r\n          <TextField\r\n            label=\"password\"\r\n            name=\"password\"\r\n            type={'password'}\r\n            value={data.password}\r\n            onChange={handleChange}\r\n            error={errors.password}\r\n          />\r\n          <button\r\n            disabled={!isValid}\r\n            className={` \r\n            bg-gray-400 mt-8 border rounded-xl border-transparent p-2 hover:text-white w-3/4 text-white dark:bg-gray-600 ${\r\n              isValid ? 'hover:bg-blue-700 text-white animate-pulse' : ''\r\n            } \r\n          `}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","export function validator(data, config) {\r\n  const errors = {}\r\n\r\n  function validate(validateMethod, data, config) {\r\n    let statusValidate\r\n\r\n    switch (validateMethod) {\r\n      case 'isRequired': {\r\n        statusValidate = data.trim() === ''\r\n        break\r\n      }\r\n\r\n      case 'isEmail':\r\n        {\r\n          const emailRegExp = /^\\S+@\\S+\\.\\S+$/g\r\n          statusValidate = !emailRegExp.test(data)\r\n        }\r\n        break\r\n\r\n      case 'isCapitalSymbol': {\r\n        const capitalRegExp = /[A-Z]+/g\r\n        statusValidate = !capitalRegExp.test(data)\r\n        break\r\n      }\r\n\r\n      case 'isContainDigit': {\r\n        const difitRegExp = /\\d+/g\r\n        statusValidate = !difitRegExp.test(data)\r\n        break\r\n      }\r\n\r\n      case 'isMin': {\r\n        statusValidate = data.length < config.value\r\n        break\r\n      }\r\n\r\n      default:\r\n        break\r\n    }\r\n\r\n    if (statusValidate) return config.message\r\n  }\r\n\r\n  for (const fieldName in data) {\r\n    for (const validateMethod in config[fieldName]) {\r\n      const error = validate(\r\n        validateMethod,\r\n        data[fieldName],\r\n        config[fieldName][validateMethod]\r\n      )\r\n\r\n      if (error && !errors[fieldName]) {\r\n        errors[fieldName] = error\r\n      }\r\n    }\r\n  }\r\n\r\n  return errors\r\n}\r\n","import React from 'react'\r\nconst Main = () => {\r\n  return <div className=\"text-4xl font-bold layout-content\">Main page</div>\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { ThemeProvider } from './components/providers/ThemeProvider'\r\nimport NavBar from './components/navBar'\r\nimport Users from './layouts/users'\r\nimport Login from './layouts/login'\r\nimport Main from './layouts/main'\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider>\r\n      <div className=\"layout-app\">\r\n        <div>\r\n          <NavBar />\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/users/:userId?\" component={Users} />\r\n            <Route path=\"/\" component={Main} />\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './app/App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport './index.scss'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\nreportWebVitals()\r\n"],"sourceRoot":""}